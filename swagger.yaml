openapi: 3.0.3
info:
  title: Tutoring Assistant OpenAPI Specification
  version: 0.0.1

paths:
  /auth/register:
    post:
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Registration"
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - text
                properties:
                  text:
                    type: string
                    example: teacher@gmail.com
        '409':
          description: Conflict error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /auth/login:
    post:
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - accessToken
                properties:
                  accessToken:
                    type: string
                    example: eyJh...
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /auth/logout:
    get:
      tags:
        - Auth
      operationId: logoutUser
      parameters: []
      responses:
        '200':
          description: Successful operation
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /profile:
    get:
      security:
        - bearerAuth: []
      tags:
        - Profile
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      security:
        - bearerAuth: []
      tags:
        - Profile
      operationId: changeUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /profile/{email}:
    get:
      tags:
        - Profile
      operationId: getUserByName
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Incorrect request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Profile
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be deleted
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have editing rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
    delete:
      tags:
        - Profile
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: email
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful removal
        '400':
          description: Invalid username supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have editing rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /teachers:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Teachers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teacher'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /teachers/{teacherId}:
    get:
      summary: Получение информации об учителе по ID
      security:
        - bearerAuth: [ ]
      tags:
        - Teachers
      parameters:
        - in: path
          name: teacherId
          schema:
            type: integer
          required: true
          description: ID учителя
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Teacher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /teacher/students:
    get:
      security:
        - bearerAuth: []
      tags:
        - Teacher
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Students"
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have reading rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      security:
        - bearerAuth: []
      tags:
        - Teacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: student@gmail.com
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Students"
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have editing rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: Too many students
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyError'
        '409':
          description: Student has already been added earlier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /teacher/students/{student_id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Teacher
      parameters:
        - name: student_id
          in: path
          required: true
          description: Student Id
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have reading rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      security:
        - bearerAuth: []
      tags:
        - Teacher
      parameters:
        - name: student_id
          in: path
          required: true
          description: Идентификатор ученика
          schema:
            type: integer
          example: 1
      responses:
        '204':
          description: Successful removal
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have editing rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /lessons/:
    get:
      security:
        - bearerAuth: []
      tags:
        - Lessons
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lessons"
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      security:
        - bearerAuth: []
      tags:
        - Lessons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - date
              properties:
                name:
                  type: string
                  example: напоминание
                date:
                  type: string
                  format: 2024-12-26T15:00:00
                  example: 2024-12-26T15:00:00
                duration:
                  type: string
                  format: 2024-12-26T15:00:00
                  example: 2024-12-26T15:00:00
                followedUserId:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lesson"
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have editing rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Followed User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /lesson/{lesson_id}:
    delete:
      security:
        - bearerAuth: []
      tags:
        - Lessons
      parameters:
        - name: lesson_id
          in: path
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '204':
          description: Successful removal
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have editing rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Lesson not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      security:
        - bearerAuth: []
      tags:
        - Lessons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - lesson_id
                - name
                - description
                - date
              properties:
                lesson_id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: напоминание
                description:
                  type: string
                  example: сходить на занятие
                date:
                  type: string
                  format: 2024-12-26T15:00:00
                  example: 2024-12-26T15:00:00
                duration:
                  type: string
                  format: 2024-12-26T15:00:00
                  example: 2024-12-26T15:00:00
                followedUserId:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Successful operation
        '401':
          description: User is not authorized
        '403':
          description: User does not have editing rights
        '404':
          description: Lesson not found
        '409':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /lessons/{lessonId}/take:
    post:
      summary: Ученик забирает свободное время учителя.
      security:
        - bearerAuth: []
      tags:
        - Lessons
      parameters:
        - in: path
          name: lessonId
          schema:
            type: integer
            required: true
          description: ID свободного урока, который нужно забрать.
        - in: query
          name: studentId
          schema:
            type: integer
            required: true
          description: ID ученика, забирающего время.
      responses:
        '200':
          description: Время успешно забрано учеником.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
        '400':
          description: Урок не свободен, или ученик уже записан на это время, или другие ошибки.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Урок не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /lessons/{lessonId}/switch:
    post:
      summary: Поменяться уроками с другим учеником.
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: lessonId
          schema:
            type: integer
            required: true
          description: ID урока, которым хочет поменяться ученик.
        - in: query
          name: studentId
          schema:
            type: integer
            required: true
          description: ID ученика, который хочет поменяться.
        - in: query
          name: otherStudentId
          schema:
            type: integer
            required: true
          description: ID ученика, с которым нужно поменяться.
      responses:
        '200':
          description: Запрос на обмен успешно создан и отправлен другому ученику.
        '400':
          description: Условия для обмена не соблюдены (учитель запретил, время обмена истекло и т.д.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Урок или ученики не найдены.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /lessons/{lessonId}/approve-switch:
    post:
      summary: Подтвердить или отклонить запрос на обмен уроками.
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: lessonId
          schema:
            type: integer
            required: true
          description: ID урока, по которому был запрос на обмен.
        - in: query
          name: studentId
          schema:
            type: integer
            required: true
          description: ID ученика, который должен подтвердить/отклонить запрос.
        - in: query
          name: approve
          schema:
            type: boolean
            required: true
          description: Подтвердить (true) или отклонить (false) запрос.
      responses:
        '200':
          description: Запрос успешно обработан.
        '400':
          description: Ошибка при обработке запроса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Урок или ученик не найдены.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /homeworks:
    get:
      security:
        - bearerAuth: []
      tags:
        - Homeworks
      parameters:
        - in: query
          name: studentId
          schema:
            type: integer
          description: ID ученика, для которого запрашиваются задания.
        - in: query
          name: teacherId
          schema:
            type: integer
          description: ID учителя, чьи задания запрашиваются.
        - in: query
          name: page
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Homeworks"
        '400':
          description: Incorrect request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Student or Teacher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      security:
        - bearerAuth: []
      tags:
        - Homeworks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Homework'
      responses:
        '201':
          description: Домашнее задание успешно создано.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Students"
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have editing rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /homeworks/{homework_id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Homeworks
      parameters:
        - in: path
          name: homework_id
          schema:
            type: integer
          required: true
          description: ID домашнего задания
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have reading rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Homework not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      security:
        - bearerAuth: []
      tags:
        - Homeworks
      parameters:
        - in: path
          name: homework_id
          schema:
            type: integer
          required: true
          description: ID домашнего задания
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Homework'
      responses:
        '200':
          description: Домашнее задание успешно обновлено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have editing rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Homework not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
    delete:
      security:
        - bearerAuth: []
      tags:
        - Homeworks
      parameters:
        - in: path
          name: homework_id
          schema:
            type: integer
          required: true
          description: ID домашнего задания
      responses:
        '204':
          description: Successful removal
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have editing rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Homework not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /homeworks/{homework_id}/status:
    patch:
      security:
        - bearerAuth: []
      tags:
        - Homeworks
      parameters:
        - in: path
          name: homework_id
          schema:
            type: integer
          required: true
          description: ID домашнего задания
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/HomeworkStatus'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have editing rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Домашнее задание не найдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /homeworks/{homework_id}/grade:
    patch:
      security:
        - bearerAuth: []
      tags:
        - Homeworks
      parameters:
        - in: path
          name: homework_id
          schema:
            type: integer
          required: true
          description: ID домашнего задания
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                grade:
                  type: integer
                  description: Оценка за домашнее задание.
                teacherComment:
                  type: string
                  description: Комментарий учителя.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have editing rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Homework not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /materials:
    get:
      security:
        - bearerAuth: []
      tags:
        - Materials
      parameters:
        - in: query
          name: teacherId
          schema:
            type: integer
          description: ID учителя, чьи материалы запрашиваются (только для учителя).
        - in: query
          name: studentId
          schema:
            type: integer
          description: ID ученика, для которого запрашиваются материалы.
        - in: query
          name: isPublic
          schema:
            type: boolean
          description: Вернуть только публичные материалы.
        - in: query
          name: page
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Materials'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have reading rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
    post:
      security:
        - bearerAuth: []
      tags:
        - Materials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
      responses:
        '201':
          description: Материал успешно добавлен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have editing rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /materials/{materialId}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Materials
      parameters:
        - in: path
          name: materialId
          schema:
            type: integer
          required: true
          description: Material Id
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
        '403':
          description: User does not have reading rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Material not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Materials
      parameters:
        - in: path
          name: materialId
          schema:
            type: integer
          required: true
          description: Material Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
      responses:
        '200':
          description: Материал успешно обновлен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have editing rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Material not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

    delete:
      security:
        - bearerAuth: [ ]
      tags:
        - Materials
      parameters:
        - in: path
          name: materialId
          schema:
            type: integer
          required: true
          description: Material Id
      responses:
        '204':
          description: Successful removal
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have editing rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Material not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /materials/generate-pdf:
    post:
      security:
        - bearerAuth: []
      tags:
        - Materials
      parameters:
        - in: query
          name: materialIds
          schema:
            type: array
            items:
              type: integer
            required: true
          description: ID material
      responses:
        '200':
          description: PDF file is successfully generated and returned
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have generate file rights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Material not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal error creating PDF file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Login:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: foobar@gmail.com
        password:
          type: string
          example: 1234567890

    Roles:
      type: string
      enum: [ teacher, student ]

    Registration:
      type: object
      required:
        - email
        - password
        - role
      properties:
        email:
          type: string
          example: teacher@gmail.com
        password:
          type: string
          example: 12345
        role:
          $ref: "#/components/schemas/Roles"

    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        role:
          $ref: "#/components/schemas/Roles"

    Student:
      type: object
      required:
        - studentId
      properties:
        studentId:
          type: integer
          example: 1
        user:
          type: object
          properties:
            id:
              type: integer
              example: 1
            email:
              type: string
              example: igor@gmail.com
            firstName:
              type: string
              example: Игорь
            lastName:
              type: string
              example: Игоревич

    Students:
      type: object
      properties:
        students:
          type: array
          items:
            $ref: "#/components/schemas/Student"

    Teacher:
      type: object
      properties:
        id:
          type: integer
          description: ID учителя.
          readOnly: true
        firstName:
          type: string
          description: Имя учителя.
        lastName:
          type: string
          description: Фамилия учителя.
        email:
          type: string
          format: email
          description: Email учителя.

    Teachers:
      type: object
      properties:
        students:
          type: array
          items:
            $ref: "#/components/schemas/Teachers"

    Lesson:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          description: ID урока.
          readOnly: true
        name:
          type: string
        description:
          type: string
        subject:
          type: string
        teacherId:
          type: integer
          description: ID учителя, проводящего урок.
        startTime:
          type: string
          format: date-time
          description: Время начала урока.
        endTime:
          type: string
          format: date-time
          description: Время окончания урока.
        studentIds:
          type: array
          items:
            type: integer
            description: Список ID учеников, участвующих в уроке.
        homeworkLink:
          type: string
          description: Ссылка на домашнее задание.
        date_created:
          type: string
          format: 2024-12-26T15:00:00
          example: 2024-12-26T15:00:00
        update_at:
          type: string
          format: 2024-12-26T15:00:00
          example: 2024-12-26T15:00:00

    Lessons:
      type: object
      properties:
        ownerLessons:
          type: array
          items:
            $ref: "#/components/schemas/Lesson"
        followerLessons:
          type: array
          items:
            $ref: "#/components/schemas/Lesson"

    HomeworkStatus:
      type: string
      enum: [ not_done, pending, completed ]
      description: Статус домашнего задания.  (not_done - не сделано, pending - ждет проверки, completed - оценено)

    Homework:
      type: object
      properties:
        id:
          type: integer
          description: ID домашнего задания
          readOnly: true
        title:
          type: string
          description: Заголовок домашнего задания
        description:
          type: string
          description: Описание домашнего задания
        dueDate:
          type: string
          format: date-time
          description: Дата выполнения домашнего задания
        studentId:
          type: integer
          description: ID ученика, которому назначено задание
        lessonId:
          type: integer
          description: ID урока, к которому относится задание
        status:
          $ref: "#/components/schemas/HomeworkStatus"
        grade:
          type: integer
          description: Оценка за домашнее задание.  Может быть null, если не проверено
        assessmentScale:
          type: integer
          description: Максимальная допустимая оценка за домашнее задание
        teacherComment:
          type: string
          description: Комментарий учителя к домашнему заданию

    Homeworks:
      type: object
      properties:
        students:
          type: array
          items:
            $ref: "#/components/schemas/Homework"

    Material:
      type: object
      properties:
        id:
          type: integer
          description: ID материала.
          readOnly: true
        title:
          type: string
          description: Название материала.
        description:
          type: string
          description: Описание материала.
        fileUrl:
          type: string
          description: URL файла материала.
        isPublic:
          type: boolean
          description: Доступен ли материал всем ученикам.
        teacherId:
          type: integer
          description: ID учителя, добавившего материал.
        studentIds:
          type: array
          items:
            type: integer
            description: Список ID учеников, которым доступен материал (если isPublic = false).

    Materials:
      type: object
      properties:
        students:
          type: array
          items:
            $ref: "#/components/schemas/Materials"

    Error:
      type: object
      properties:
        message:
          type: string
          example: "The userId should be a number"
          description: Сообщение об ошибке.

    ValidationError:
      type: object
      properties:
        field:
          type: string
          example: "email"
        detail:
          type: string
          example: "The mail is incorrect"

    ConflictError:
      type: object
      properties:
        detail:
          type: string
          example: "Email already exists"
      required:
        - detail

    TooManyError:
      type: object
      properties:
        limit:
          type: integer
          minimum: 1
          example: 10
      required:
        - limit

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: [ ]

